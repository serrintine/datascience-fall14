SQL Assignment Submission

=== 1
create view numberofmedals as
       (select c.name as country_name,
               (count(i.medal) + count(t.medal)) as number_of_medals
        from countries c
             left outer join
             teammedals t on t.country_id = c.country_id
             left outer join
             individualmedals i on i.country_id = c.country_id
        group by c.name);
**************** RESULT ***************************************************************
CREATE VIEW

select * from numberofmedals limit 5;

               country_name               | number_of_medals 
------------------------------------------+------------------
 Costa Rica                               |                2
 Latvia                                   |                2
 Estonia                                  |                2
 Eritrea                                  |                1
 Turkey                                   |                1
(5 rows)
=============================================================================================

=== 2
a) select r.a, r.b, s.c, s.d
   from r inner join s
        on r.c = s.c or r.c is null and s.c is null;

b) select r.a, r.b, s.c, s.d
   from r inner join s on r.c = s.c
   union
   select r.a, r.b, null, null
   from r inner join s on r.c is null and s.c is null
   union
   select null, null, s.c, s.d
   from r inner join s on r.c is null and s.c is null
**************** RESULT ***************************************************************
a)      a      | b  | c  |     d      
   ------------+----+----+------------
    a3         | 30 | 30 | d1        
    a4         |  0 |    | d2        
   (2 rows)

b)      a      | b  | c  |     d      
   ------------+----+----+------------
    a3         | 30 | 30 | d1        
               |    |    | d2        
    a4         |  0 |    | 
   (3 rows)
=============================================================================================

=== 3
create or replace function insert_row() returns trigger as
$body$
begin
  if right(new.event_id, 2) in
     ('81','82','83','84','85','86','87','88','89','90',
      '91','92','93','94','95','96','97','98','99','00')
  then
    insert into teammedals
    select distinct c.country_id,
           r.event_id,
           r.medal,
           r.result
    from results r inner join
         events e on r.event_id = e.event_id inner join
         players p on r.player_id = p.player_id inner join
         countries c on c.country_id = p.country_id
    where e.event_id = new.event_id;
    delete from teammedals where ctid not in
    (select max(ctid) from teammedals group by teammedals.*);
  end if;
  return new;
end;
$body$
language plpgsql;

drop trigger if exists update_teammedals on results;
create trigger update_teammedals
       after insert on results
       for each row
       execute procedure insert_row();
**************** RESULT ***************************************************************
CREATE FUNCTION
CREATE TRIGGER

select * from teammedals where event_id = 'E90';
 country_id | event_id |  medal  | result 
------------+----------+---------+--------
 USA        | E90      | GOLD    |  37.61
 BRA        | E90      | SILVER  |   37.9
 CUB        | E90      | BRONZE  |  38.04
(3 rows)

insert into players
       values('Test player', 'TESTPLAY01', 'RUS', null);
INSERT 0 1

insert into results
       values('E90', 'TESTPLAY01', 'COPPER', 40.01);
INSERT 0 1

select * from teammedals where event_id = 'E90';
 country_id | event_id |  medal  | result 
------------+----------+---------+--------
 USA        | E90      | GOLD    |  37.61
 CUB        | E90      | BRONZE  |  38.04
 RUS        | E90      | COPPER  |  40.01     <--- a new medal in the table!
 BRA        | E90      | SILVER  |   37.9
(4 rows)
=============================================================================================

=== 4
select xmlelement(name medal, 
                  event_name,
                  player_name)
from (select xmlelement(name event, trim(e.name)) as event_name,
             xmlelement(name players,
                        xmlagg(xmlelement(name player, trim(p.name)))
                       ) as player_name
      from events e inner join
           results r on e.event_id = r.event_id inner join
           players p on r.player_id = p.player_id
      where e.olympic_id = 'ATH2004' and
            r.medal = 'GOLD' and
            p.country_id = 'USA'
      group by e.name
     ) as gold_medalers;
**************** RESULT ***************************************************************
Demonstrative excerpt of output:

<medal>
  <event>100m Butterfly Men</event>
  <players>
    <player>Michael Phelps</player>
  </players>
</medal>
<medal>
  <event>200m Men</event>
  <players>
    <player>Shawn Crawford</player>
  </players>
</medal>
<medal>
  <event>4x200m Freestyle Relay Men</event>
  <players>
    <player>Peter Vanderkaay</player>
    <player>Michael Phelps</player>
    <player>Ryan Lochte</player>
    <player>Klete Keller</player>
    <player>Scott Goldblatt</player>
  </players>
</medal>
=============================================================================================

